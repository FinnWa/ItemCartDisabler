<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <service id="ItemCartDisabler\Subscriber\Storefront\Subscriber"
                 class="ItemCartDisabler\Subscriber\Storefront\Subscriber">
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="ItemCartDisabler\Visibility\AddToCartButtonDisabler"
                 class="ItemCartDisabler\Visibility\AddToCartButtonDisabler">
            <tag name="twig.extension"/>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
        </service>

        <service id="ItemCartDisabler\Visibility\AddToCartButtonModalDisabler"
                 class="ItemCartDisabler\Visibility\AddToCartButtonModalDisabler">
            <tag name="twig.extension"/>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
        </service>

        <service id="ItemCartDisabler\Weather\ChangeWeatherStatus" class="ItemCartDisabler\Weather\ChangeWeatherStatus">
            <argument type="service" id="product.repository"/>
            <argument type="service" id="ItemCartDisabler\Weather\GetWeatherDataAPI"/>
            <argument type="service" id="ItemCartDisabler\Product\ProductsToArrayMapper"/>
        </service>

        <service id="ItemCartDisabler\Command\ChangeWeatherStatusCommand"
                 class="ItemCartDisabler\Command\ChangeWeatherStatusCommand">
            <tag name="console.command"/>
            <argument type="service" id="ItemCartDisabler\Weather\ChangeWeatherStatus"/>
            <argument type="service" id="ItemCartDisabler\Weather\FitsWeatherCustomFieldUpdater"/>
        </service>


        <service id="ItemCartDisabler\Command\GetWeatherDataAPICommand"
                 class="ItemCartDisabler\Command\GetWeatherDataAPICommand">
            <tag name="console.command"/>
            <argument type="service" id="ItemCartDisabler\Weather\GetWeatherDataAPI"/>
        </service>

        <service id="ItemCartDisabler\Weather\GetWeatherDataAPI"
                 class="ItemCartDisabler\Weather\GetWeatherDataAPI">
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="Symfony\Contracts\HttpClient\HttpClientInterface"/>
        </service>

        <service id="ItemCartDisabler\Fixer\FixTemperatureCustomFields"
                 class="ItemCartDisabler\Fixer\FixTemperatureCustomFields">
            <argument type="service" id="product.repository"/>
            <argument type="service" id="ItemCartDisabler\Product\ProductsToArrayMapper"/>
        </service>

        <service id="ItemCartDisabler\Command\FixTemperatureCustomFieldsCommand"
                 class="ItemCartDisabler\Command\FixTemperatureCustomFieldsCommand">
            <tag name="console.command"/>
            <argument type="service" id="ItemCartDisabler\Weather\TemperatureCustomFieldUpdater"/>
        </service>

        <service id="ItemCartDisabler\ScheduledTask\ChangeWeatherStatusTask">
            <tag name="shopware.scheduled.task" />
        </service>

        <service id="ItemCartDisabler\ScheduledTask\ChangeWeatherStatusTaskHandler">
            <argument type="service" id="scheduled_task.repository" />
            <argument type="service" id="ItemCartDisabler\Weather\ChangeWeatherStatus"/>
            <tag name="messenger.message_handler" />
        </service>

        <service id="ItemCartDisabler\Product\ProductsToArrayMapper" class="ItemCartDisabler\Product\ProductsToArrayMapper">
        </service>

        <service id="ItemCartDisabler\Weather\FitsWeatherCustomFieldUpdater" class="ItemCartDisabler\Weather\FitsWeatherCustomFieldUpdater">
            <argument type="service" id="ItemCartDisabler\Weather\GetWeatherDataAPI"/>
            <argument type="service" id="product.repository"/>
            <argument type="service" id="ItemCartDisabler\Weather\TemperatureRangeChecker"/>
            <argument type="service" id="ItemCartDisabler\Weather\FitsWeatherDatabaseWriter"/>
        </service>

        <service id="ItemCartDisabler\Weather\FitsWeatherDatabaseWriter" class="ItemCartDisabler\Weather\FitsWeatherDatabaseWriter">
            <argument type="service" id="product.repository"/>
        </service>

        <service id="ItemCartDisabler\Weather\TemperatureRangeChecker" class="ItemCartDisabler\Weather\TemperatureRangeChecker">
        </service>

        <service id="ItemCartDisabler\Weather\TemperatureDatabaseWriter" class="ItemCartDisabler\Weather\TemperatureDatabaseWriter">
            <argument type="service" id="product.repository"/>
        </service>

        <service id="ItemCartDisabler\Weather\TemperatureCustomFieldUpdater"
                 class="ItemCartDisabler\Weather\TemperatureCustomFieldUpdater">
            <argument type="service" id="product.repository"/>
            <argument type="service" id="ItemCartDisabler\Weather\TemperatureDatabaseWriter"/>
        </service>

    </services>
</container>